#include <iostream>
using namespace std;
#include <string>
#define MAX 1000

//设计联系人结构体
struct Person
{
	//姓名
	string m_Name;
	//性别 1 男 2 女
	int m_Sex;
	//年龄
	int m_Age;
	//电话
	string m_Phone;
	//住址
	string m_Addr;
};

//设计通讯录结构体
struct Addressbooks
{
	//通讯录中保存的联系人的数组
	struct Person personArray[MAX];

	//通讯录中当前记录的联系人个数
	int m_Size;
};

//1、添加联系人
void addPerson(Addressbooks* abs)
{
	//先判断通讯录是否已满，如果满了就不再添加
	if (abs->m_Size == MAX)
	{
		cout << "通讯录已满，无法添加！" << endl;
		return;
	}
	else
	{
		//添加具体的联系人

		//姓名
		string name;
		cout << "请输入姓名：  " << endl;
		cin >> name;
		abs->personArray[abs->m_Size].m_Name = name;

		//性别
		cout << "请输入性别：  " << endl;
		cout << "1 --- 男" << endl;
		cout << "2 --- 女" << endl;

		int sex = 0;
		
		while (true)
		{
			//如果输入1或2可以退出循环，因为输入的是正确值
			//如果输入有误，请重新输入
			cin >> sex;
			if (sex == 1 || sex == 2)
			{
				abs->personArray[abs->m_Size].m_Sex = sex;
				break;
			}
			cout << "输入有误，请重新输入" << endl;
		}

		//年龄
		cout << "请输入年龄：  " << endl;
		int age = 0;

		while (true)
		{
			cin >> age;
			if (age >= 0 && age <= 150)
			{
				abs->personArray[abs->m_Size].m_Age = age;
				break;
			}
			cout << "请输入正确的年龄" << endl;
		}

		//电话
		cout << "请输入电话：  " << endl;
		string phone;
		cin >> phone;
		abs->personArray[abs->m_Size].m_Phone = phone;

		//住址
		cout << "请输入家庭住址：  " << endl;
		string address;
		cin >> address;
		abs->personArray[abs->m_Size].m_Addr = address;

		//更新通讯录中的人数
		abs->m_Size++;

		cout << "添加成功" << endl;

		system("pause"); //按任意键继续
		system("cls"); //清除屏幕
	}
}

//2、显示所有的联系人
void showPerson(Addressbooks * abs)
{
	//判断通讯录中人数是否为0，如果为0，提示记录为空
	//如果不为0，显示记录的联系人信息
	if (abs->m_Size == 0)
	{
		cout << "当前的记录为空" << endl;
	}
	else
	{
		for (int i = 0; i < abs->m_Size; i++)
		{
			cout << "姓名：  " << abs->personArray[i].m_Name << "\t";
			cout << "性别：  " << (abs->personArray[i].m_Sex == 1 ? "男" : "女") << "\t";
			cout << "年龄：  " << abs->personArray[i].m_Age << "\t";
			cout << "电话：  " << abs->personArray[i].m_Phone << "\t";
			cout << "住址：  " << abs->personArray[i].m_Addr << endl;
		}
	}

	system("pause");
	system("cls");
}

//检测联系人是否存在，如果存在，返回联系人所在数组中的具体位置，不存在返回-1
int isExist(Addressbooks * abs, string name)
{
	for (int i = 0; i < abs->m_Size; i++)
	{
		//找到用户输入的姓名
		if (name == abs->personArray[i].m_Name)
		{
			return i; //找到了返回该人在数组中的下标编号
		}
	}
	return -1; //遍历结束都没有找到，返回-1
}

//3、删除指定的联系人
void deletePerson(Addressbooks * abs)
{
	cout << "请输入您要删除的联系人：  " << endl;

	string name;
	cin >> name;

	int ret = isExist(abs, name);

	if (ret != -1)
	{
		//查找到人，要进行删除操作
		for (int i = ret; i < abs->m_Size; i++)
		{
			//数据前移
			abs->personArray[i] = abs->personArray[i + 1];
		}
		abs->m_Size--; //更新通讯录中的人员数
		cout << "删除成功" << endl;
	}
	else
	{
		cout << "查无此人" << endl;
	}

	system("pause");
	system("cls");
}

//4、查找指定的联系人信息
void findPerson(Addressbooks* abs)
{
	cout << "请输入要查找的联系人：  " << endl;
	string name;
	cin >> name;

	int ret = isExist(abs, name);
	if (ret != -1)
	{
		cout << "姓名：  " << abs->personArray[ret].m_Name << "\t";
		cout << "性别：  " << (abs->personArray[ret].m_Sex == 1 ? "男" : "女") << "\t";
		cout << "年龄：  " << abs->personArray[ret].m_Age << "\t";
		cout << "电话：  " << abs->personArray[ret].m_Phone << "\t";
		cout << "住址：  " << abs->personArray[ret].m_Addr << endl;
	}
	else
	{
		cout << "查无此人" << endl;
	}

	system("pause");
	system("cls");
}

//5、修改指定的联系人信息
void modifyPerson(Addressbooks * abs)
{
	cout << "请输入要修改的联系人" << endl;
	string name;
	cin >> name;

	int ret = isExist(abs, name);
	if (ret != -1)
	{
		cout << "*******************" << endl;
		cout << "**  1、修改姓名  **" << endl;
		cout << "**  2、修改性别  **" << endl;
		cout << "**  3、修改年龄  **" << endl;
		cout << "**  4、修改电话  **" << endl;
		cout << "**  5、修改住址  **" << endl;
		cout << "**  6、退出修改  **" << endl;
		cout << "*******************" << endl;

		int select = 0;
		cin >> select;

		switch (select)
		{
		case 1://姓名
		{
			string modifyname;
			cout << "请输入姓名：  " << endl;
			cin >> modifyname;
			abs->personArray[ret].m_Name = modifyname;
			cout << "修改姓名成功" << endl;
		}
		break;
		case 2://性别
		{
			int modifysex = 0;
			cout << "请输入性别：  " << endl;
			cout << "1 --- 男" << endl;
			cout << "2 --- 女" << endl;

			while (true)
			{
				cin >> modifysex;
				if (modifysex == 1 || modifysex == 2)
				{
					abs->personArray[ret].m_Sex = modifysex;
					cout << "修改性别成功" << endl;
					break;
				}
				cout << "输入有误，请重新输入" << endl;
			}
		}
		break;
		case 3://年龄
		{
			int modifyage = 0;
			cout << "请输入年龄：  " << endl;
			while (true)
			{
				cin >> modifyage;
				if (modifyage >= 0 && modifyage <= 150)
				{
					abs->personArray[ret].m_Age = modifyage;
					cout << "修改年龄成功" << endl;
					break;
				}
				cout << "输入有误，请重新输入" << endl;
			}
		}
		break;
		case 4://电话
		{
			string modifyphone;
			cout << "请输入电话：  " << endl;
			cin >> modifyphone;
			abs->personArray[ret].m_Phone = modifyphone;
			cout << "修改电话成功" << endl;
		}
		break;
		case 5://住址
		{
			string modifyaddr;
			cout << "请输入住址：  " << endl;
			cin >> modifyaddr;
			abs->personArray[ret].m_Addr = modifyaddr;
			cout << "修改住址成功" << endl;
		}
		break;
		default:
			cout << "请根据提示正确输入" << endl;
			break;
		}
	}
	else
	{
		cout << "查无此人" << endl;
	}

	system("pause");
	system("cls");
}

//6、清空联系人
void cleanPerson(Addressbooks* abs)
{
	cout << "您是否真的要清空？" << endl;
	cout << "1 --- 是" << endl;
	cout << "2 --- 否" << endl;
	int clear = 0;

	while(true)
	{
		cin >> clear;
		if (clear == 1 || clear == 2)
		{
			if(clear == 1)
			{
				abs->m_Size = 0;
				cout << "通讯录已清空" << endl;
				break;
			}
			else
			{
				cout << "信息被保留" << endl;
				break;
			}
		}
		else
		{
			cout << "输入错误，请重新输入" << endl;
		}
	}

	system("pause");
	system("cls");
}

//菜单界面
void showMenu()
{
	cout << "***************************" << endl;
	cout << "*****  1、添加联系人  *****" << endl;
	cout << "*****  2、显示联系人  *****" << endl;
	cout << "*****  3、删除联系人  *****" << endl;
	cout << "*****  4、查找联系人  *****" << endl;
	cout << "*****  5、修改联系人  *****" << endl;
	cout << "*****  6、清空联系人  *****" << endl;
	cout << "*****  0、退出联系人  *****" << endl;
	cout << "***************************" << endl;
}

int main()
{
	//创建通讯录结构体变量
	Addressbooks abs;
	//初始化通讯录中当前人员个数
	abs.m_Size = 0;
	int select = 0; //创建用户选择输入的变量
	
	while (true)
	{
		//菜单调用
		showMenu();

		cin >> select;

		switch (select)
		{
		case 1://添加联系人
			addPerson(&abs); //利用地址传递，可以修饰实参
			break;
		case 2://显示联系人
			showPerson(&abs);
			break;
		case 3://删除联系人
			deletePerson(&abs);
			break;
		case 4://查找联系人
			findPerson(&abs);
			break;
		case 5://修改联系人
			modifyPerson(&abs);
			break;
		case 6://清空联系人
			cleanPerson(&abs);
			break;
		case 0://退出联系人
			cout << "欢迎下次使用" << endl;
			system("pause");
			return 0;
			break;
		default:
			cout << "请按照提示输入" << endl;
			break;
		}
	}
	system("pause");

	return 0;
}